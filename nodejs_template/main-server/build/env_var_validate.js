"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _path = _interopRequireDefault(require("path"));

/**
 * Copyright (c) 2018, 2019 ChibCha COMPANY LIMITED
 *
 */
if (process.env.NODE_ENV == null || process.env.NODE_ENV === '') {
  console.warn('"NODE_ENV" environment variable is not set. Default to "development"');
} else {
  if (process.env.NODE_ENV !== 'development' && process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {
    console.error('ERROR:', 'Unsupported "NODE_ENV" environment variable value. Only "development", "production", and "test" are allowed. Process will now exit.');
    process.exit(1);
  }
}

if (process.env.NODE_ID == null || process.env.NODE_ID === '') {
  console.error('ERROR:', '"NODE_ID" environment variable is not set. Process will now exit.');
  process.exit(1);
}

if (process.env.MQ_CONTACT_IP == null) {
  console.warn('"MQ_CONTACT_IP" environment variable is not set. Default to "localhost"');
}

if (process.env.LOG_LEVEL != null && process.env.LOG_LEVEL !== 'error' && process.env.LOG_LEVEL !== 'warn' && process.env.LOG_LEVEL !== 'info' && process.env.LOG_LEVEL !== 'verbose' && process.env.LOG_LEVEL !== 'debug' && process.env.LOG_LEVEL !== 'silly') {
  console.error('ERROR:', 'Unsupported "LOG_LEVEL" environment variable value. Only "error", "warn", "info", "verbose", "debug", and "silly" are allowed. Process will now exit.');
  process.exit(1);
}

if (process.env.LOG_TARGET != null && process.env.LOG_TARGET !== 'console' && process.env.LOG_TARGET !== 'file') {
  console.error('ERROR:', 'Unsupported "LOG_TARGET" environment variable value. Only "console" and "file" are allowed. Process will now exit.');
  process.exit(1);
}

if (process.env.LOG_TARGET === 'file') {
  if (process.env.LOG_DIRECTORY_PATH == null) {
    console.warn(`"LOG_DIRECTORY_PATH" environment variable is not set. Default to "${_path.default.join(__dirname, '..', 'log')}"`);
  }
}

if (process.env.NODE_ENV === 'production') {
  if (process.env.USE_EXTERNAL_CRYPTO_SERVICE !== 'true' && (process.env.PRIVATE_KEY_PATH == null || process.env.MASTER_PRIVATE_KEY_PATH == null)) {
    console.error('ERROR:', '"PRIVATE_KEY_PATH" and/or "MASTER_PRIVATE_KEY_PATH" environment variables are not set. Process will now exit.');
    process.exit(1);
  }

  if (process.env.HTTPS === 'true' && (!process.env.HTTPS_KEY_PATH || !process.env.HTTPS_CERT_PATH)) {
    console.error('ERROR:', '"HTTPS_KEY_PATH" and "HTTPS_CERT_PATH" environment variables are not set when "HTTPS" is set to true. Process will now exit.');
    process.exit(1);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbnZfdmFyX3ZhbGlkYXRlLmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImNvbnNvbGUiLCJ3YXJuIiwiZXJyb3IiLCJleGl0IiwiTk9ERV9JRCIsIk1RX0NPTlRBQ1RfSVAiLCJMT0dfTEVWRUwiLCJMT0dfVEFSR0VUIiwiTE9HX0RJUkVDVE9SWV9QQVRIIiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJVU0VfRVhURVJOQUxfQ1JZUFRPX1NFUlZJQ0UiLCJQUklWQVRFX0tFWV9QQVRIIiwiTUFTVEVSX1BSSVZBVEVfS0VZX1BBVEgiLCJIVFRQUyIsIkhUVFBTX0tFWV9QQVRIIiwiSFRUUFNfQ0VSVF9QQVRIIl0sIm1hcHBpbmdzIjoiOzs7O0FBS0E7O0FBTEE7Ozs7QUFPQSxJQUFJQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixJQUF4QixJQUFnQ0YsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsRUFBN0QsRUFBaUU7QUFDL0RDLEVBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLHNFQURGO0FBR0QsQ0FKRCxNQUlPO0FBQ0wsTUFDRUosT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBekIsSUFDQUYsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFEekIsSUFFQUYsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsTUFIM0IsRUFJRTtBQUNBQyxJQUFBQSxPQUFPLENBQUNFLEtBQVIsQ0FDRSxRQURGLEVBRUUscUlBRkY7QUFJQUwsSUFBQUEsT0FBTyxDQUFDTSxJQUFSLENBQWEsQ0FBYjtBQUNEO0FBQ0Y7O0FBRUQsSUFBSU4sT0FBTyxDQUFDQyxHQUFSLENBQVlNLE9BQVosSUFBdUIsSUFBdkIsSUFBK0JQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTSxPQUFaLEtBQXdCLEVBQTNELEVBQStEO0FBQzdESixFQUFBQSxPQUFPLENBQUNFLEtBQVIsQ0FDRSxRQURGLEVBRUUsbUVBRkY7QUFJQUwsRUFBQUEsT0FBTyxDQUFDTSxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUdELElBQUlOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxhQUFaLElBQTZCLElBQWpDLEVBQXVDO0FBQ3JDTCxFQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FDRSx5RUFERjtBQUdEOztBQUVELElBQ0VKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLElBQXlCLElBQXpCLElBQ0FULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLEtBQTBCLE9BRDFCLElBRUFULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLEtBQTBCLE1BRjFCLElBR0FULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLEtBQTBCLE1BSDFCLElBSUFULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLEtBQTBCLFNBSjFCLElBS0FULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLEtBQTBCLE9BTDFCLElBTUFULE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxTQUFaLEtBQTBCLE9BUDVCLEVBUUU7QUFDQU4sRUFBQUEsT0FBTyxDQUFDRSxLQUFSLENBQ0UsUUFERixFQUVFLHVKQUZGO0FBSUFMLEVBQUFBLE9BQU8sQ0FBQ00sSUFBUixDQUFhLENBQWI7QUFDRDs7QUFFRCxJQUNFTixPQUFPLENBQUNDLEdBQVIsQ0FBWVMsVUFBWixJQUEwQixJQUExQixJQUNBVixPQUFPLENBQUNDLEdBQVIsQ0FBWVMsVUFBWixLQUEyQixTQUQzQixJQUVBVixPQUFPLENBQUNDLEdBQVIsQ0FBWVMsVUFBWixLQUEyQixNQUg3QixFQUlFO0FBQ0FQLEVBQUFBLE9BQU8sQ0FBQ0UsS0FBUixDQUNFLFFBREYsRUFFRSxvSEFGRjtBQUlBTCxFQUFBQSxPQUFPLENBQUNNLElBQVIsQ0FBYSxDQUFiO0FBQ0Q7O0FBRUQsSUFBSU4sT0FBTyxDQUFDQyxHQUFSLENBQVlTLFVBQVosS0FBMkIsTUFBL0IsRUFBdUM7QUFDckMsTUFBSVYsT0FBTyxDQUFDQyxHQUFSLENBQVlVLGtCQUFaLElBQWtDLElBQXRDLEVBQTRDO0FBQzFDUixJQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FDRyxxRUFBb0VRLGNBQUtDLElBQUwsQ0FDbkVDLFNBRG1FLEVBRW5FLElBRm1FLEVBR25FLEtBSG1FLENBSW5FLEdBTEo7QUFPRDtBQUNGOztBQUVELElBQUlkLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLE1BQ0VGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYywyQkFBWixLQUE0QyxNQUE1QyxLQUNDZixPQUFPLENBQUNDLEdBQVIsQ0FBWWUsZ0JBQVosSUFBZ0MsSUFBaEMsSUFDQ2hCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZZ0IsdUJBQVosSUFBdUMsSUFGekMsQ0FERixFQUlFO0FBQ0FkLElBQUFBLE9BQU8sQ0FBQ0UsS0FBUixDQUNFLFFBREYsRUFFRSwrR0FGRjtBQUlBTCxJQUFBQSxPQUFPLENBQUNNLElBQVIsQ0FBYSxDQUFiO0FBQ0Q7O0FBRUQsTUFDRU4sT0FBTyxDQUFDQyxHQUFSLENBQVlpQixLQUFaLEtBQXNCLE1BQXRCLEtBQ0MsQ0FBQ2xCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZa0IsY0FBYixJQUErQixDQUFDbkIsT0FBTyxDQUFDQyxHQUFSLENBQVltQixlQUQ3QyxDQURGLEVBR0U7QUFDQWpCLElBQUFBLE9BQU8sQ0FBQ0UsS0FBUixDQUNFLFFBREYsRUFFRSw4SEFGRjtBQUlBTCxJQUFBQSxPQUFPLENBQUNNLElBQVIsQ0FBYSxDQUFiO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE4LCAyMDE5IENoaWJDaGEgQ09NUEFOWSBMSU1JVEVEXG4gKlxuICovXG5cbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT0gbnVsbCB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJycpIHtcbiAgY29uc29sZS53YXJuKFxuICAgICdcIk5PREVfRU5WXCIgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90IHNldC4gRGVmYXVsdCB0byBcImRldmVsb3BtZW50XCInXG4gICk7XG59IGVsc2Uge1xuICBpZiAoXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcgJiZcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0J1xuICApIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgJ0VSUk9SOicsXG4gICAgICAnVW5zdXBwb3J0ZWQgXCJOT0RFX0VOVlwiIGVudmlyb25tZW50IHZhcmlhYmxlIHZhbHVlLiBPbmx5IFwiZGV2ZWxvcG1lbnRcIiwgXCJwcm9kdWN0aW9uXCIsIGFuZCBcInRlc3RcIiBhcmUgYWxsb3dlZC4gUHJvY2VzcyB3aWxsIG5vdyBleGl0LidcbiAgICApO1xuICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9JRCA9PSBudWxsIHx8IHByb2Nlc3MuZW52Lk5PREVfSUQgPT09ICcnKSB7XG4gIGNvbnNvbGUuZXJyb3IoXG4gICAgJ0VSUk9SOicsXG4gICAgJ1wiTk9ERV9JRFwiIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG5vdCBzZXQuIFByb2Nlc3Mgd2lsbCBub3cgZXhpdC4nXG4gICk7XG4gIHByb2Nlc3MuZXhpdCgxKTtcbn1cblxuXG5pZiAocHJvY2Vzcy5lbnYuTVFfQ09OVEFDVF9JUCA9PSBudWxsKSB7XG4gIGNvbnNvbGUud2FybihcbiAgICAnXCJNUV9DT05UQUNUX0lQXCIgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90IHNldC4gRGVmYXVsdCB0byBcImxvY2FsaG9zdFwiJ1xuICApO1xufVxuXG5pZiAoXG4gIHByb2Nlc3MuZW52LkxPR19MRVZFTCAhPSBudWxsICYmXG4gIHByb2Nlc3MuZW52LkxPR19MRVZFTCAhPT0gJ2Vycm9yJyAmJlxuICBwcm9jZXNzLmVudi5MT0dfTEVWRUwgIT09ICd3YXJuJyAmJlxuICBwcm9jZXNzLmVudi5MT0dfTEVWRUwgIT09ICdpbmZvJyAmJlxuICBwcm9jZXNzLmVudi5MT0dfTEVWRUwgIT09ICd2ZXJib3NlJyAmJlxuICBwcm9jZXNzLmVudi5MT0dfTEVWRUwgIT09ICdkZWJ1ZycgJiZcbiAgcHJvY2Vzcy5lbnYuTE9HX0xFVkVMICE9PSAnc2lsbHknXG4pIHtcbiAgY29uc29sZS5lcnJvcihcbiAgICAnRVJST1I6JyxcbiAgICAnVW5zdXBwb3J0ZWQgXCJMT0dfTEVWRUxcIiBlbnZpcm9ubWVudCB2YXJpYWJsZSB2YWx1ZS4gT25seSBcImVycm9yXCIsIFwid2FyblwiLCBcImluZm9cIiwgXCJ2ZXJib3NlXCIsIFwiZGVidWdcIiwgYW5kIFwic2lsbHlcIiBhcmUgYWxsb3dlZC4gUHJvY2VzcyB3aWxsIG5vdyBleGl0LidcbiAgKTtcbiAgcHJvY2Vzcy5leGl0KDEpO1xufVxuXG5pZiAoXG4gIHByb2Nlc3MuZW52LkxPR19UQVJHRVQgIT0gbnVsbCAmJlxuICBwcm9jZXNzLmVudi5MT0dfVEFSR0VUICE9PSAnY29uc29sZScgJiZcbiAgcHJvY2Vzcy5lbnYuTE9HX1RBUkdFVCAhPT0gJ2ZpbGUnXG4pIHtcbiAgY29uc29sZS5lcnJvcihcbiAgICAnRVJST1I6JyxcbiAgICAnVW5zdXBwb3J0ZWQgXCJMT0dfVEFSR0VUXCIgZW52aXJvbm1lbnQgdmFyaWFibGUgdmFsdWUuIE9ubHkgXCJjb25zb2xlXCIgYW5kIFwiZmlsZVwiIGFyZSBhbGxvd2VkLiBQcm9jZXNzIHdpbGwgbm93IGV4aXQuJ1xuICApO1xuICBwcm9jZXNzLmV4aXQoMSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5MT0dfVEFSR0VUID09PSAnZmlsZScpIHtcbiAgaWYgKHByb2Nlc3MuZW52LkxPR19ESVJFQ1RPUllfUEFUSCA9PSBudWxsKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgYFwiTE9HX0RJUkVDVE9SWV9QQVRIXCIgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90IHNldC4gRGVmYXVsdCB0byBcIiR7cGF0aC5qb2luKFxuICAgICAgICBfX2Rpcm5hbWUsXG4gICAgICAgICcuLicsXG4gICAgICAgICdsb2cnXG4gICAgICApfVwiYFxuICAgICk7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgaWYgKFxuICAgIHByb2Nlc3MuZW52LlVTRV9FWFRFUk5BTF9DUllQVE9fU0VSVklDRSAhPT0gJ3RydWUnICYmXG4gICAgKHByb2Nlc3MuZW52LlBSSVZBVEVfS0VZX1BBVEggPT0gbnVsbCB8fFxuICAgICAgcHJvY2Vzcy5lbnYuTUFTVEVSX1BSSVZBVEVfS0VZX1BBVEggPT0gbnVsbClcbiAgKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgICdFUlJPUjonLFxuICAgICAgJ1wiUFJJVkFURV9LRVlfUEFUSFwiIGFuZC9vciBcIk1BU1RFUl9QUklWQVRFX0tFWV9QQVRIXCIgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBub3Qgc2V0LiBQcm9jZXNzIHdpbGwgbm93IGV4aXQuJ1xuICAgICk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgaWYgKFxuICAgIHByb2Nlc3MuZW52LkhUVFBTID09PSAndHJ1ZScgJiZcbiAgICAoIXByb2Nlc3MuZW52LkhUVFBTX0tFWV9QQVRIIHx8ICFwcm9jZXNzLmVudi5IVFRQU19DRVJUX1BBVEgpXG4gICkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAnRVJST1I6JyxcbiAgICAgICdcIkhUVFBTX0tFWV9QQVRIXCIgYW5kIFwiSFRUUFNfQ0VSVF9QQVRIXCIgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSBub3Qgc2V0IHdoZW4gXCJIVFRQU1wiIGlzIHNldCB0byB0cnVlLiBQcm9jZXNzIHdpbGwgbm93IGV4aXQuJ1xuICAgICk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG59XG4iXX0=